$(document).ready(function(){
	
	var $lateralMenuTrigger = $('.nav-wrapper > h3'), // the big cross button
	$contentWrapper = $('.site-wrapper'),			
	//$navigation = $('.primary-nav > ul');	
	$navigation = $('.nav-wrapper');		// the side menu
		
	$lateralMenuTrigger.on('click', function(e){
		e.preventDefault();
		
		$lateralMenuTrigger.toggleClass('is-clicked');
		$navigation.toggleClass('lateral-menu-is-open');
		$contentWrapper.toggleClass('lateral-menu-is-open').one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function(){
			// firefox transitions break when parent overflow is changed, so we need to wait for the end of the transition to give the body an overflow hidden
			$('body').toggleClass('overflow-hidden');
		});
		//check if transitions are not supported - i.e. in IE9
		if($('html').hasClass('no-csstransitions')) {
			$('body').toggleClass('overflow-hidden');
		}
		
		$('.parent').toggleClass('extended');
		
	});
	
	// This will create toggable spans to display deeper menu links
	$(".nav-wrapper .nav.menu li.parent" ).append( $( "<span>" ) );

	$('.nav-wrapper .nav.menu li.parent span').click(function() {
		//$lateralMenuTrigger.addClass('is-clicked');
		$(this).toggleClass('btn-active');
		$(this).prev().toggleClass('child-expanded');
	});
	   
	// This function runs on every 'mouse up' after a click
	// 'clickAwayFromElement' can be found in _utils.js
	/*
	$(document).mouseup(function (e) {
		var thisClick = e;
		var lateralMenuIsOpen = $navigation.hasClass('lateral-menu-is-open');
		if(lateralMenuIsOpen && !$lateralMenuTrigger.is(thisClick.target) && !$navigation.is(thisClick.target)) {
			clickAwayFromElement(thisClick, $lateralMenuTrigger, 'is-clicked');
			clickAwayFromElement(thisClick, $navigation, 'lateral-menu-is-open');
		}
	});  
	*/
/*
$( ".logged-out .primary-nav a.nav-logged-in" ).parent().addClass('nav-logged-in');
$( ".logged-in .primary-nav a.nav-logged-out" ).parent().addClass('nav-logged-out');
$( ".logged-out .primary-nav a.nav-logged-out" ).parent().addClass('nav-logged-out');
$( ".logged-in .primary-nav a.nav-logged-in" ).parent().addClass('nav-logged-in');
*/

});

(function ( $ ) {
	 
    $.fn.bindChildrenToASelect = function( options ) {

    	var settings = $.extend( {
		    // These are the defaults.
		    bindParentClassPrefix: "bindTo",
		    bindChildClassPrefix : "boundToValue",
		    hasContainer         : true,
		    containerElement     : 'div',
		    placeholderElement   : 'div',
		    placeholderAttr      : 'data-boundTo',
		}, options );
		
    	return this.each( function() {
    		
			var sClass = $(this).attr('class');
			
			var aChildName = sClass.match( new RegExp( settings.bindParentClassPrefix + "\\[(.+?)\\]" ) ); 
			if ( aChildName == null ) {
				return;
			}
			
			var sChildName = aChildName[1];
			var $oForm = $(this).closest('form');
			var $oChildren = $oForm.find('[name="' + sChildName +'"]' );
			
			$(this).change( function() {       
			    
				var sSelectedValue = $(this).val();
				
				$oChildren.each( function( index ) {
					
					var $oElement = $(this);
					var aBoundValue = $oElement.attr('class').match( new RegExp( settings.bindChildClassPrefix + "\\[(.+?)\\]" ) ); 
					if ( aBoundValue == null ) {
						return;
					}
					
					var sBoundValue = aBoundValue[1];
					
					if(settings.hasContainer) {
						$oElement = $oElement.closest(settings.containerElement);
					} 
					
					if( sBoundValue == sSelectedValue ) {
						var $oPlaceholder = $(settings.placeholderElement + '[' + settings.placeholderAttr + '=' + index + ']', $oForm );
						if( $oPlaceholder.length > 0 ) {
							$oPlaceholder.replaceWith( $oElement );
						} else {
							$oElement.show();
						}
					} else {
						var $oPlaceholder = $('<' + settings.placeholderElement + '></' + settings.placeholderElement + '>').hide().attr( settings.placeholderAttr, index );
						$oElement.replaceWith( $oPlaceholder );
					}
				});
			});
			
			$(this).trigger('change');	
	    } );
    }; 
}( jQuery ));

$(function() {
	//$('select[name="form-job-type"]').bindChildrenToASelect();
	$('select[name="form-cv-selector"]').bindChildrenToASelect();
});
$(document).ready(function(){
	

// main jobsearch form in header
$(".search-form-wrapper span.extended-search").click(function() {
	$('.search-form-wrapper').toggleClass('active');
	$('.search-form-wrapper .extended-search-group').toggleClass('active');
});

// 'refine your search' aside form
$(".search-form-wrapper-aside span.extended-search").click(function() {
	$('.search-form-wrapper-aside').toggleClass('active');
	$('.search-form-wrapper-aside .extended-search-group').toggleClass('active');
});
	  
// SALARY SELECTOR LOGIC
$('.form-job-type-switcher').on('change', function() {
	if(this.value == 1) {
		// CONTRACT TYPE SELECTED
		$( ".form-item-active" ).removeClass( "form-item-active" );
		$(".form-contract-salary").parent().addClass("form-item-active");
	} else if (this.value == 2) {
		// PERMANENT TYPE SELECTED
		$( ".form-item-active" ).removeClass( "form-item-active" );
		$(".form-permanent-salary").parent().addClass("form-item-active");
	} else {
		// NO SALARY TYPE SELECTED
		$( ".form-item-active" ).removeClass( "form-item-active" );	
	}
})
	
// This function runs on every 'click' after a click
// 'clickAwayFromElement' can be found in _utils.js
$(document).click(function (e) {
	var thisClick = e;
	var advancedSearchIsOpen = $('.search-form-wrapper').hasClass('active');
	if(advancedSearchIsOpen) {
		
		clickAwayFromElement(thisClick, '.search-form-wrapper', 'active') ;

	}
});
	
});



$(document).ready(function(){

// CALCULATORY FUNCTIONS FOR TAB ADJUSTMENT

var hidWidth;
var scrollBarWidths = 40;

var widthOfList = function(){
	var itemsWidth = 0;
	$('.job-tabs li').each(function(){
		var itemWidth = $(this).outerWidth();
		itemsWidth += itemWidth;
	});
	return itemsWidth;
};

var getLeftPosi = function(){
	return $('.job-tabs').position().left;
};

var widthOfHidden = function(){
	return (($('.tabs-wrapper').outerWidth())-widthOfList()-getLeftPosi())-scrollBarWidths;
};

var reAdjust = function(){
	if (($('.tabs-wrapper').outerWidth()) < widthOfList()) {
		$('.scroller-right').show();
	} else {
		$('.scroller-right').hide();
	}

	if (getLeftPosi() < 0) {
		$('.scroller-left').show();
	} else {
		$('.item').animate({left:"-="+getLeftPosi()+"px"},'slow');
		$('.scroller-left').hide();
	}
}

// CLICK LISTENERS
	
$('#tabs a').click(function(e) {
	e.preventDefault();
	$(this).tab('show');
})

$('.scroller-right').click(function() {
	$('.scroller-left').fadeIn('slow');
	$('.scroller-right').fadeOut('slow');
	$('.job-tabs').animate({left:"+="+widthOfHidden()+"px"},'slow');
});

$('.scroller-left').click(function() {
	$('.scroller-right').fadeIn('slow');
	$('.scroller-left').fadeOut('slow');
  	$('.job-tabs').animate({left:"-="+getLeftPosi()+"px"},'slow');
}); 


$tabs = $('.job-tabs li'); 
var NumberofTabs = $tabs.length


var totalTablength = 0 // total length of visible tabs
$('ul.job-tabs li').each(function(){ totalTablength += $(this).width(); }) // calculating total length of tabs
var tabsWrapperlength = $('.tabs-wrapper').width() // length of tab'a wrapper

var doTabsNeedToBeScrollable =  totalTablength > tabsWrapperlength;


// SWIPE LISTENERS

$(".tab-content").swipe( {
	
    swipeLeft:function(event, direction, distance, duration, fingerCount, fingerData) {
		// If the active list item is NOT the last one ...
		if( !$('.job-tabs li:last-child').hasClass('active') ) {
			var previousTabWidth =  ($('.job-tabs li.active').width()); 
			
			if(doTabsNeedToBeScrollable) $('.job-tabs').animate({left:"-="+previousTabWidth+"px"},'slow'); // moves tabs on mobile 

			$('.tab-content .active').removeClass('active').next('.tab-pane').addClass('active');
			$('.job-tabs .active').removeClass('active').next('li').addClass('active');
		}


    },
    swipeRight:function(event, direction, distance, duration, fingerCount, fingerData) { 


		var howFarLeftisTabList =  parseFloat($('.job-tabs').css('left'));
		var nextTabWidth = ($('.job-tabs li.active').prev('li').width());

		if ( !$('.job-tabs li:first-child').hasClass('active') ){

			if(doTabsNeedToBeScrollable) $('.job-tabs').animate({left: howFarLeftisTabList+nextTabWidth+ "px"},'slow'); // moves tabs on mobile 


			$('.tab-content .active').removeClass('active').prev('.tab-pane').addClass('active');
			$('.job-tabs .active').removeClass('active').prev('li').addClass('active');
		}

	


    },

    preventDefaultEvents : false

});

// ON WINDOW RESIZE - ALSO TRIGGERS ON LOAD

$(window).on("resize", function () {
	
	// Only run the tab checks if there are tabs on the page ...
	if($('.tabs-wrapper').length) {
		reAdjust();
	}
	
}).resize(); // this line ensures it triggers .onload too


});   

